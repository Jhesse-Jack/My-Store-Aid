{"version":3,"sources":["components/header.js","components/footer.js","pages/SearchResults/fetchresults.js","components/loader.js","pages/SearchResults/index.js","pages/SalesMade/index.js","pages/Sales Constituents/index.js","App.js","reportWebVitals.js","index.js"],"names":["styles","header","margin","padding","border","fontSize","font","verticalAlign","display","Header","className","id","style","to","footer","Footer","class","href","getBranchResults","a","finalResponse","success","code","msg","data","fetch","method","headers","response","console","log","json","status","GetSalesMade","branch_id","localStorage","getItem","getSalesConstituents","sale_id","Loader","useStyles","makeStyles","table","minWidth","SearchResults","props","classes","React","useState","nrows","setRows","useEffect","then","branches","length","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","io","scope","name","location","whatsAppPhone","type","startDate","onClick","setItem","window","SalesMade","page","setPage","rowsPerPage","setRowsPerPage","dense","emptyRows","Math","min","sales","JSON","stringify","slice","paymentType","discount","receiptNumber","created_at","height","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","value","SalesConstituents","sale_entries","totalamountpaid","costPrice","productId","branchId","customerId","sellingPrice","quantity","entryDate","product","summary","productCategoryId","weight","image","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c087f6ad.chunk.js","sourcesContent":["import React from 'react';\nimport '../bootstrap.min.css';\nimport './layout.scss';\nimport { \n    BrowserRouter as Router,\n    Link } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <div className=\"row\">\n        <header id=\"header\" style={styles.header}>\n            <nav className=\"left\">\n                <Router>\n                    <Link to=\"/\" className=\"logo\">\n                        <span>\n                            My Store Aid Ghana\n                        </span>\n                    </Link>\n                </Router>   \n            </nav>\n            <nav className=\"right\">\n                <Router>\n                    <Link to=\"../SearchResults/index\" className=\"button alt\">\n                        <span>\n                            Branches\n                        </span>\n                    </Link>\n                    <Link to=\"/\" className=\"button alt\">\n                        <span>\n                            LOGOUT\n                        </span>\n                    </Link>\n                </Router>\n            </nav>\n        </header>\n        </div>\n    )\n};\n\nconst styles = {\n    header: {\n        margin: '0%',\n        padding: '0%',\n        border: '0',\n        fontSize: '100%',\n        font: 'inherit',\n        verticalAlign: 'baseline',\n        display: 'block',\n    }\n};\n\nexport default Header","import React from 'react';\nimport '../bootstrap.min.css';\nimport './layout.scss';\n\nconst Footer = () => {\n\treturn (\n\t\t<footer id=\"footer\" style={styles.footer}>\n\t\t\t<div class=\"inner\">\n\t\t\t\t<h2>Get In Touch</h2>\n\t\t\t\t<ul class=\"actions\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span class=\"icon fa-phone\" /> <a href=\"#\">(000) 000-0000</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span class=\"icon fa-envelope\" /> <a href=\"#\">information@untitled.tld</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span class=\"icon fa-map-marker\" /> 123 Somewhere Road, Nashville, TN 00000\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class=\"copyright\">\n\t\t\t\t&copy; Untitled. Design <a href=\"https://templated.co\">TEMPLATED</a>. Images{' '}\n\t\t\t\t<a href=\"https://unsplash.com\">Unsplash</a>.\n\t\t\t</div>\n\t\t</footer>\n\t);\n};\n\nconst styles = {\n\tfooter: {\n\t\tmargin: '0%',\n\t\tpadding: '0%',\n\t\tborder: '0',\n\t\tfontSize: '100%',\n\t\tfont: 'inherit',\n\t\tverticalAlign: 'baseline',\n\t\tdisplay: 'block'\n\t}\n};\n\nexport default Footer;\n","import { useParams } from 'react-router-dom';\nimport SearchResults from './index';\n\n\nexport const getBranchResults = async () => {\n    //   const myHeaders = new Headers({\n    //     \"content-type\": \"application/json\",\n    //     \"X-El-Parah-Hash\": \"sjfvbkjwn382929dnjbd9292nsgskfn2343\",\n    //     \"X-El-Parah-Client\": \"elp-test-app\",\n    //   });\n    let finalResponse = {\n      success: false,\n      code: 0,\n      msg: \"There was a problem processing your request, please try again later\",\n      data: null,\n    };\n    try {\n      const response = await fetch(\n        \"https://core-api-dev.mystoreaid.net/v1/client/react/branches\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-El-Parah-Hash\": \"sjfvbkjwn382929dnjbd9292nsgskfn2343\",\n            \"X-El-Parah-Client\": \"elp-test-app\",\n          },\n        }\n      );\n      console.log(response);\n      const data = await response.json();\n  \n      if (response.status === 200) {\n        finalResponse[\"success\"] = true;\n        finalResponse[\"data\"] = data;\n        return finalResponse;\n      }\n  \n      if (response.status === 500) {\n        finalResponse[\"msg\"] =\n          \"There was a problem processing your request, please try again later\";\n        return finalResponse;\n      }\n    } catch (error) {\n      console.log(error);\n      return finalResponse;\n    }\n  };\n\n  export const GetSalesMade = async () => {\n    //   const myHeaders = new Headers({\n    //     \"content-type\": \"application/json\",\n    //     \"X-El-Parah-Hash\": \"sjfvbkjwn382929dnjbd9292nsgskfn2343\",\n    //     \"X-El-Parah-Client\": \"elp-test-app\",\n    //   });\n    let finalResponse = {\n      success: false,\n      code: 0,\n      msg: \"There was a problem processing your request, please try again later\",\n      data: null,\n    };\n    //let branch_id = {nrow.id}\n    //let branch_id = <SearchResults branch_id={branch_id}/>\n    let branch_id = localStorage.getItem('id');\n    console.log(\"sam\",branch_id)\n    try {\n      const response = await fetch(\n        `https://core-api-dev.mystoreaid.net/v1/client/react/branches/${branch_id}/sales`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-El-Parah-Hash\": \"sjfvbkjwn382929dnjbd9292nsgskfn2343\",\n            \"X-El-Parah-Client\": \"elp-test-app\",\n          },\n        }\n      );\n      console.log(\"Resp is\")\n      \n      const data = await response.json();\n      console.log(data);\n      if (response.status === 200) {\n        finalResponse[\"success\"] = true;\n        finalResponse[\"data\"] = data;\n        return finalResponse;\n      }\n  \n      if (response.status === 500) {\n        finalResponse[\"msg\"] =\n          \"There was a problem processing your request, please try again later\";\n        return finalResponse;\n      }\n    }\n     catch (error) {\n      console.log(error);\n      return finalResponse;\n    }\n  };\n\n\n  export const getSalesConstituents = async () => {\n    let finalResponse = {\n      success: false,\n      code: 0,\n      msg: \"There was a problem processing your request, please try again later\",\n      data: null,\n    };\n    let branch_id = localStorage.getItem('id');\n    let sale_id = localStorage.getItem('forsales');\n    console.log(\"sam\",branch_id)\n    console.log(\"const\",sale_id)\n    try {\n      const response = await fetch(\n        `https://core-api-dev.mystoreaid.net/v1/client/react/branches/${branch_id}/sales/${sale_id}/sale_entries`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-El-Parah-Hash\": \"sjfvbkjwn382929dnjbd9292nsgskfn2343\",\n            \"X-El-Parah-Client\": \"elp-test-app\",\n          },\n        }\n      );\n      console.log(\"Resp is\")\n      \n      const data = await response.json();\n      console.log(data);\n      if (response.status === 200) {\n        finalResponse[\"success\"] = true;\n        finalResponse[\"data\"] = data;\n        return finalResponse;\n      }\n  \n      if (response.status === 500) {\n        finalResponse[\"msg\"] =\n          \"There was a problem processing your request, please try again later\";\n        return finalResponse;\n      }\n    }\n     catch (error) {\n      console.log(error);\n      return finalResponse;\n    }\n  };","import React from \"react\";\nimport \"./loader.css\";\n\nconst Loader = () => {\n  return <div class=\"loader\">Loading...</div>;\n};\n\nexport default Loader;","import React, { useEffect } from \"react\";\nimport Header from \"../../components/header\";\nimport Footer from \"../../components/footer\";\n//import Menu from \"../../components/menu\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getBranchResults, GetSalesMade } from \"./fetchresults\";\nimport Loader from \"../../components/loader\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport '../../bootstrap.min.css';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst SearchResults = (props) => {\n  const classes = useStyles();\n  const [nrows, setRows] = React.useState([]);\n  const [thebranchid, setTheBranchID] = React.useState([]);\n  useEffect(() => {\n    getBranchResults().then((response) => {\n      console.log(response);\n      if (response.success === true) {\n        setRows(response.data.branches);\n      }\n    });\n  }, []);\n//   console.log(nrows);\n// const branch_id = nrows.map((row) => row.id)\n// const io = (props) => {\n// \tfinalBranch = nrows.map(())\n// };\n// console.log(branch_id);\n  return (\n    <div>\n      <Header />\n\t  &nbsp;\n\t  &nbsp;\n\t  &nbsp;\n\t  &nbsp;\n\t  <p></p>\n      {nrows.length == 0 ? (\n        <Loader />\n      ) : (\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Branch Name </TableCell>\n                <TableCell align=\"right\">Location</TableCell>\n                <TableCell align=\"right\">Phone Number (WhatsApp) </TableCell>\n                <TableCell align=\"right\">Business Type </TableCell>\n                <TableCell align=\"right\">Started on</TableCell>\n\t\t\t\t<TableCell align=\"right\"> View Sales Info </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {nrows.map((row) => (\n                <TableRow key={row.id} io={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t  <Router>\n\t\t\t\t\t\t  <Link to=\"/\">\n\t\t\t\t\t\t  \t{row.name}\n\t\t\t\t\t\t  </Link>\n\t\t\t\t\t  </Router>\n                  </TableCell>\n                  <TableCell align=\"right\">{row.location}</TableCell>\n                  <TableCell align=\"right\">{row.whatsAppPhone}</TableCell>\n                  <TableCell align=\"right\">{row.type}</TableCell>\n                  <TableCell align=\"right\">{row.startDate}</TableCell>\n\t\t\t\t  <TableCell align=\"right\">\n                    <button \n                        type=\"button\" \n                        className=\"btn btn-secondary\"\n                        onClick = {()=> {localStorage.setItem('id', row.id); window.location.href='/sales'}}\n                        >\n                       View Sales  \n                    </button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default SearchResults;","import React, { useEffect } from \"react\";\nimport Header from \"../../components/header\";\nimport Footer from \"../../components/footer\";\n//import Menu from \"../../components/menu\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GetSalesMade } from \"../SearchResults/fetchresults\";\nimport Loader from \"../../components/loader\";\n// import { BrowserRouter as Router, Link, Switch } from \"react-router-dom\";\nimport { TablePagination } from \"@material-ui/core\";\nimport '../../bootstrap.min.css';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst SalesMade = () => {\n  const classes = useStyles();\n  const [nrows, setRows] = React.useState([]);\n  const [ page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [dense, setDense] = React.useState(false);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, nrows.length - page * rowsPerPage);\n  // const handleChangeDense = (event) => {\n  //   setDense(event.target.checked);\n  // };\n  useEffect(() => {\n    GetSalesMade().then((response) => {\n    //////  console.log(response);\n      if (response.success === true) {\n        setRows(response.data.sales);\n      }\n    });\n  }, []);\n  console.log(\"dsd\")\n  console.log(JSON.stringify(nrows));\n\n  return (\n    <div>\n      <Header />\n\t  &nbsp;\n\t  &nbsp;\n\t  &nbsp;\n\t  &nbsp;\n\t  <p></p>\n      {nrows.length == 0 ? (\n        <Loader />\n      ) : (\n        <div>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Sales Type </TableCell>\n                <TableCell align=\"right\"> Payment Type </TableCell>\n                <TableCell align=\"right\"> Discount </TableCell>\n                <TableCell align=\"right\"> Receipt Number </TableCell>\n                <TableCell align=\"right\">Created on</TableCell>\n                <TableCell align=\"right\"> Sales Constituents </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(nrows)\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.type}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.paymentType}</TableCell>\n                  <TableCell align=\"right\">{row.discount}</TableCell>\n                  <TableCell align=\"right\">{row.receiptNumber}</TableCell>\n                  <TableCell align=\"right\">{row.created_at}</TableCell>\n                  <TableCell align=\"right\"> \n                    <button\n                      type=\"button\"\n                      className=\"btn btn-secondary\"\n                      onClick={() => {localStorage.setItem('forsales', row.id);console.log(\"id is\",row.id); window.location.href='/sales-constituents';}}>\n                      View Sales Constituents\n                    </button>\n                    {/* <details>\n                      <summary>\n                        Sales Constituents \n                      </summary>\n                    </details> */}\n                  </TableCell>\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination \n          rowsPerPageOptions={[5]}\n          component=\"div\"\n          count={nrows.length}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage} />\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default SalesMade;","import React, { useEffect } from \"react\";\nimport Header from \"../../components/header\";\nimport Footer from \"../../components/footer\";\n//import Menu from \"../../components/menu\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getSalesConstituents } from \"../SearchResults/fetchresults\";\nimport Loader from \"../../components/loader\";\n// import { BrowserRouter as Router, Link, Switch } from \"react-router-dom\";\nimport { TablePagination } from \"@material-ui/core\";\nimport '../../bootstrap.min.css';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst SalesConstituents = () => {\n  const classes = useStyles();\n  const [nrows, setRows] = React.useState([]);\n  const [ page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [dense, setDense] = React.useState(false);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, nrows.length - page * rowsPerPage);\n  // const handleChangeDense = (event) => {\n  //   setDense(event.target.checked);\n  // };\n  useEffect(() => {\n    getSalesConstituents().then((response) => {\n    //////  console.log(response);\n      if (response.success === true) {\n          console.log(\"ohie\")\n          console.log(response.data)\n         setRows(response.data.sale_entries);\n      }\n    });\n  }, []);\n  console.log(JSON.stringify(nrows));\n\n  //const fortotalamount = nrows.map((row) => row.id)\n  //const totamountpaid = parseInt(fortotalamount.costPrice) + parseInt(fortotalamount.discount)\n  return (\n    <div>\n      <Header />\n\t  &nbsp;\n\t  &nbsp;\n\t  &nbsp;\n\t  &nbsp;\n\t  <p></p>\n      {nrows.length == 0 ? (\n        <Loader />\n      ) : (\n        <div>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Product ID </TableCell>\n                <TableCell align=\"right\"> Branch ID </TableCell>\n                <TableCell align=\"right\"> Customer ID </TableCell>\n                <TableCell align=\"right\"> Discount </TableCell>\n                <TableCell align=\"right\"> Cost Price </TableCell>\n                <TableCell align=\"right\"> Selling Price </TableCell>\n                <TableCell align=\"right\"> Quanity </TableCell>\n                <TableCell align=\"right\"> Entry Date </TableCell>\n                <TableCell align=\"right\"> Product Name </TableCell>\n                <TableCell align=\"right\"> Product Summary </TableCell>\n                <TableCell align=\"right\"> Product Category ID </TableCell>\n                <TableCell align=\"right\"> Product Weight </TableCell>\n                <TableCell align=\"right\"> Product Image </TableCell>\n                <TableCell align=\"right\"> Total Amount Paid </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(nrows)\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                  const totalamountpaid = row.costPrice + row.discount\n                  return (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">{row.productId}</TableCell>\n                  <TableCell align=\"right\">{row.branchId}</TableCell>\n                  <TableCell align=\"right\">{row.customerId}</TableCell>\n                  <TableCell align=\"right\">{row.discount}</TableCell>\n                  <TableCell align=\"right\">{row.costPrice}</TableCell>\n                  <TableCell align=\"right\">{row.sellingPrice}</TableCell>\n                  <TableCell align=\"right\">{row.quantity}</TableCell>\n                  <TableCell align=\"right\">{row.entryDate}</TableCell>\n                  <TableCell align=\"right\">{row.product.name}</TableCell>\n                  <TableCell align=\"right\">{row.product.summary}</TableCell>\n                  <TableCell align=\"right\">{row.product.productCategoryId}</TableCell>\n                  <TableCell align=\"right\">{row.product.weight}</TableCell>\n                  <TableCell align=\"right\">{row.product.image}</TableCell>\n                  <TableCell align=\"right\">\n                      {totalamountpaid}\n                  </TableCell>\n                </TableRow>\n                )\n            })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows}}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination \n          rowsPerPageOptions={[5]}\n          component=\"div\"\n          count={nrows.length}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage} />\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default SalesConstituents;","import React from 'react';\nimport SearchResults from './pages/SearchResults/index';\nimport SalesMade from './pages/SalesMade/index';\nimport SalesConstituents from './pages/Sales Constituents/index';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nconst App = () => {\n  return (\n\n    <Router >\n   \n    <Switch>\n           <Route\n            exact \n            path=\"/\"\n            component={<SearchResults />}>\n            <SearchResults />\n            </Route>\n            \n            <Route\n            exact \n            path=\"/sales\"\n            component={<SalesMade />}>\n            <SalesMade />\n            </Route>\n\n            <Route\n              exact\n              path=\"/sales-constituents\"\n              component={<SalesConstituents />}>\n              <SalesConstituents />\n            </Route>\n            </Switch>\n       {/*  <SearchResults /> */}\n            </Router>\n  \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}